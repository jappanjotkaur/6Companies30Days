class Solution {
public:
    int peopleAwareOfSecret(int n, int delay, int forget) {
      long long mod=1e9+7;
        vector<long long>arr(n+1);//stores the no. of new people who learned secret on each day
        arr[1]=1;//On day 1, only one person knows the secret
        long long r=1,s=0;//r:tracks total no. of people who still remember the secret;s:tracks no. of people who can currently spread the secret.
        for(int i=2;i<=n;i++){
          if(i>delay){//If current day(i) > delay, then people who learned the secret delay days ago now start spreading it.
            s=(s+arr[i-delay])%mod;//Added arr[i-delay] to s bcz these people can now share the secret.
          }
          if(i>forget){//If i>forget, then people who learned the secret forget days ago now forget it.
            s=(s-arr[i-forget]+mod)%mod;//+mod to handle -ve values
            r=(r-arr[i-forget]+mod)%mod;////We subtract arr[i - forget] from s and r bcz they can no longer share the secret and should be removed from the total count.
          }
          arr[i]=s%mod;//Store number of new people who learned the secret on day i
          r=(r+s)%mod;//Add these new learners to total count of people who remember secret
        }       
        return r%mod;//no. of people who still remember the secret on day n
    }
};
