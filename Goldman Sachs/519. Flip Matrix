//TC:O(n) for N calls to flip() and Constructor: O(1),flip(): O(1) per call,reset(): O(1)
//SC:O(1)
class Solution {
    int row = 0, col = 0;//track the current position in the matrix
    int totalRows = 0, totalCols = 0;
public:
    Solution(int m,int n):totalRows(m),totalCols(n) {}//constructor n Initializes totalRows to m & totalCols to n.
    vector<int> flip(){
        col++;//Increments col, moving to next column in the current row.
        if (col == totalCols){//If col reaches end of the row (totalCols), it resets col to 0 and moves to the next row
            col = 0;
            row++;
        }
        if (row == totalRows){
            row = 0;
            col = 0;
        }
        return {row, col};
    }
    void reset() {
        // Resetting is not necessary since it will automatically reset when reaching the end.
    }
};


/**
 * Your Solution object will be instantiated and called as such:
 * Solution* obj = new Solution(m, n);
 * vector<int> param_1 = obj->flip();
 * obj->reset();
 */
