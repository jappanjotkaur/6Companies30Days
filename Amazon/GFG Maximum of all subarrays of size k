class Solution {
  public:
    // Function to find maximum of each subarray of size k.
    vector<int> maxOfSubarrays(vector<int>& arr, int k) {
        deque<int> dq;
        vector<int> ans;
        for(int i=0;i<arr.size();i++){
            if(!dq.empty() && dq.front() == i-k) dq.pop_front();//out of bound will be removed
            while(!dq.empty() && arr[dq.back()] < arr[i])
                dq.pop_back();
            
            dq.push_back(i);
            if(i>=k-1) ans.push_back(arr[dq.front()]);
        }
        return ans;
    }
};
//TC:O(N)+O(N)=O(N) (out of bound ke liye traversal+removing element <=arr[i])
//SC:O(k) //size of sliding window
